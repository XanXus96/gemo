-include .env

.DEFAULT_GOAL := help

define silent_run
@$(1)
endef

define run
@printf "\n    \033[38;5;106m $(1)\033[39m\n"
$(call silent_run, $(1))
endef

define copy-dist-file
@if [ -f $@ ] && ! diff $< $@ >/dev/null 2>&1; \
then\
	printf "\n    \033[38;5;208mThe $< file has changed. Please check your $@ file\033[39m\n\n";\
	touch $@;\
	printf "\n    \033[38;5;208mdiff $< $@\033[39m\n\n";\
								diff $< $@;\
	exit 1;\
else\
	printf "\n    \033[38;5;106mcp $< $@\033[39m\n\n";\
								cp $< $@;\
fi
endef

DOCKER_COMPOSE := docker-compose -p $(PROJECT_NAME)
DOCKER_COMPOSE_RUN ?= $(DOCKER_COMPOSE) run -T --rm
DOCKER_COMPOSE_RUN_PHP ?= $(DOCKER_COMPOSE_RUN) php
RUN_COMPOSER ?= $(DOCKER_COMPOSE_RUN_PHP) composer --ansi
RUN_ARTISAN ?= $(DOCKER_COMPOSE_RUN_PHP) php artisan

.PHONY: help
help::
	@printf "\n"
	@printf "\033[33m Provisioning:\033[39m\n"
	@printf "\033[38;5;106m   help                                 \033[39m   Display this help message.\n"
	@printf "\033[38;5;106m   install                              \033[39m   Install everything needed to run this application\n"
	@printf "\033[38;5;106m   run                                  \033[39m   Hot reloading for development. Launch your web server with detached docker process\n"
	@printf "\033[38;5;106m   stop                                 \033[39m   Stop containers.\n"
	@printf "\033[38;5;106m   clean                                \033[39m   Cleans everything generated by the application. This allows to start over when something went wrong\n"

.PHONY: install
install:: .env -setup-network -install-docker composer-install artisan-key

.PHONY: run
run:: -setup-network
	$(call run, \
		$(DOCKER_COMPOSE) up -d \
	)

.PHONY: stop
stop::
	$(call run, \
		$(DOCKER_COMPOSE) stop \
	)

.PHONY: clean
clean:: -clean-docker
	$(call run, \
		rm -rf bin/.phpunit public/reports vendor \
	)

.PHONY: -setup-network
-setup-network::
	$(call run, \
		docker network ls | grep $(PROJECT_NETWORK) || docker network create $(PROJECT_NETWORK) \
	)

.PHONY: -clean-docker
-clean-docker:: -clean-docker-software

.PHONY: -clean-docker-software
-clean-docker-software::
	$(call run, \
		$(DOCKER_COMPOSE) down --volumes --remove-orphans \
	)

.PHONY: -install-docker
-install-docker:: -build-docker-software

.PHONY: -build-docker-software
-build-docker-software::
	$(call run, \
		$(DOCKER_COMPOSE) build \
	)

.env:: .env.example
	$(call copy-dist-file)

.PHONY: composer-install
composer-install::
	$(call run, \
		$(RUN_COMPOSER) install --no-progress --prefer-dist --no-suggest \
	)

.PHONY: artisan-key
artisan-key::
	$(call run, \
		$(RUN_ARTISAN) key:generate \
	)
